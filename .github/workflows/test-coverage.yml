name: Test Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache kcov build
        id: cache-kcov
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/kcov
          key: ${{ runner.os }}-kcov-${{ hashFiles('.github/workflows/test-coverage.yml') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          # Install bats
          sudo apt-get install -y bats
          
          # Install kcov if not in cache
          if [ ! -f "/usr/local/bin/kcov" ] || [ "${{ steps.cache-kcov.outputs.cache-hit }}" != "true" ]; then
            # First try to install from repositories
            if sudo apt-get install -y kcov; then
              echo "kcov installed from repositories"
            else
              echo "kcov not found in main repositories, searching for available packages..."
              apt-cache search kcov || true
              apt-cache search coverage | grep -i "code coverage" || true
              
              # As a fallback, build from source with optimized settings
              echo "Building kcov from source..."
              sudo apt-get install -y cmake build-essential binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev
              cd /tmp
              git clone --depth 1 https://github.com/SimonKagstrom/kcov.git
              cd kcov
              mkdir build
              cd build
              cmake -DCMAKE_BUILD_TYPE=Release ..
              make -j$(nproc)
              sudo make install
            fi
          else
            echo "Using cached kcov installation"
          fi
          
          # Verify kcov is installed and display version
          which kcov
          kcov --version

      - name: Run tests with coverage
        run: |
          chmod +x scripts/run-tests-with-coverage.sh
          ./scripts/run-tests-with-coverage.sh

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: lawrennd/vibesafe
          directory: ./coverage
          fail_ci_if_error: false
          verbose: true 